# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    Modules.txt                                        :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: pamatya <pamatya@student.42heilbronn.de    +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2025/07/11 20:46:08 by pamatya           #+#    #+#              #
#    Updated: 2025/07/30 20:08:28 by pamatya          ###   ########.fr        #
#                                                                              #
# **************************************************************************** #


1. Necessary coordinations between parsing and rendering - 
 - 


2. Gameplay elements
 - The game seg-faults when the rendering goes out of bounds. This needs to be
   checked and fixed.
 - Fix the walking and running movements delta for small angles which
   won't show for walking but does for running, by implementing fractional accumulation
 - Add the ability to hold more than one key at a time. eg. moving forward
   while turning
 - Maybe the out of bounds check for player blob movement should be separate for
   x and y to allow movement in one just the one dimension if it is possible
 - Player blob movement within the map bounds has been added, but it is not precise.
   Particularly when player blob reaches near the wall, it overlaps the border in
   the bottom right and cannot go close enough in the opposite corner
 - There is this issue for images in the player struct (both imgs), that when the
   drawing goes out of bounds it tends to wrap around the image and continues to
   be drawn on the other side
 - 


3. Project progress and game elements
 - Integrate and make runnable with the current parser instead of the mini-parser
 - Add rays within the field of view by using draw lines or similar
 - Add collision detection so that player does not overlap with existing blocks
 - Figuring out how to use textures and initializing them in the game struct
 - DDA algorithm for ray length calculation
 - Engine to transform ray length to object size in the 3d view
 - Engine to remove fish-eye effect while rendering 3d view


4. Parsing issues
 - The check_key_data_completion() fn needs to be restored after texture initialization
 - Parser needs to check for other types of spaces in map
 - Parser needs to add extra padding for tabs and other types of spaces if necessary
 - The direction that the player is facing is not linked by the parser
 - Color rgb's need to be checked (also if only uint8 is required)
 - 


5. Optimizations
 - Angle increment with turn keys are detected keeps increasing the angle of the
   current direction. This might be an issue while stress-testing. Remedy this by
   using the fmod() fn with 2*PI value.
 - The player direction drawn at the moment should be executed as a pointer to
   the struct rays and drawn in a similar way to the way other rays will be drawn,
   using a single consistent function
 - The boundary variables in the move_player() fn from events.c can be created as
   additional fields to avoid extra calculations in every loop step. Since the
   bounds as their current state are made up of other fields in the data struct
   that don't change, precalculating them can save a good amount of processing
   overhead as it builds up from the events listening at 60 fps or so.
 - 

 